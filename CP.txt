public class Closest_pair_of_points {
    public static void main(String[] args) {
        // 두 점 (x,y)와 (x1,y1)간의 거리를 구한다
        System.out.println(getDistance(1,1,2,2));
    }
    static double getDistance(int x, int y, int x1, int y1) {
        // Math.pow() <- 제곱
        // Math.sqrt() <- 루트
        double d;
        int xd, yd;
        yd = (int) Math.pow((y1-y),2);
        xd = (int) Math.pow((x1-x),2);
        d = Math.sqrt(yd+xd);
        return d;
    }
}
public class  Closest_pair_of_points{
    public static void Closest_pair_of_points(int[] arr) {
        sort(arr, 0, arr.length - 1);
    }

    private static void sort(int[] arr, int low, int high) {
        if (low >= high) return;

        int mid = partition(arr, low, high);
        sort(arr, low, mid - 1);
        sort(arr, mid, high);
    }

    private static int partition(int[] arr, int low, int high) {
        int pivot = arr[(low + high) / 2];
        while (low <= high) {
            while (arr[low] < pivot) low++;
            while (arr[high] > pivot) high--;
            if (low <= high) {
                swap(arr, low, high);
                low++;
                high--;
            }
        }
        return low;
    }

    private static void swap(int[] arr, int i, int j) {
        int tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }
}
